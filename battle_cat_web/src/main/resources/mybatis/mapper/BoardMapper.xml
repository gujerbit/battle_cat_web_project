<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gujerbit.battle_cat_web.dao.BoardDAO">

	<insert id="writing">
		INSERT INTO board_data(email, title, content, text, writing_date, remove, type)
		VALUES(#{email}, #{title}, #{content}, #{text}, #{writing_date}, false, #{type})
	</insert>
	
	<select id="getAllBoardData" resultType="BoardVO">
		SELECT b.idx, u.name, u.grade, b.title, b.text, b.writing_date, b.remove, b.type FROM board_data b, user_data u
		<where>
			b.email = u.email
		</where>
		LIMIT #{start}, #{end}
	</select>
	
	<select id="getAllBoardCountData" resultType="BoardCountVO">
		SELECT * FROM board_count_data
		LIMIT #{start}, #{end}
	</select>
	
	<select id="selectAllBoardDataSize" resultType="int">
		SELECT COUNT(idx) FROM board_data
	</select>
	
	<select id="selectAllBoardCountDataSize" resultType="int">
		SELECT COUNT(idx) FROM board_count_data
	</select>
	
	<select id="getBoardData" resultType="BoardVO">
		SELECT * FROM board_data
		<where>
			idx = #{idx}
		</where>
	</select>
	
	<select id="duplicateCheck" resultType="int">
		SELECT COUNT(idx) FROM board_count_data
		<where>
			board_idx = #{board_idx}
			AND
			type = #{type}
			AND
			email = #{email}
		</where>
	</select>
	
	<insert id="countUpdate">
		INSERT INTO board_count_data(board_idx, type, email, name) VALUES(#{board_idx}, #{type}, #{email}, #{name})
	</insert>
	
	<select id="getCountData" resultType="BoardCountVO">
		SELECT * FROM board_count_data
		<where>
			board_idx = #{idx}
		</where>
	</select>
	
	<update id="deleteBoard">
		UPDATE board_data SET remove = true
		<where>
			idx = #{idx}
			AND
			email = #{email}
		</where>
	</update>
	
	<update id="updateBoard">
		UPDATE board_data SET title = #{title}, content = #{content}, text = #{text}, type = #{type}
		<where>
			idx = #{idx}
			AND
			email = #{email}
		</where>
	</update>
	
	<insert id="writingComment">
		INSERT INTO comment_data(board_idx, comment_idx, salt_idx, email, comment, parent_comment, comment_date, remove) VALUES(#{board_idx}, #{comment_idx}, #{salt_idx}, #{email}, #{comment}, #{parent_comment}, #{comment_date}, false)
	</insert>
	
	<select id="getCommentData" resultType="CommentVO">
		SELECT c.idx, c.board_idx, c.comment_idx, c.salt_idx, c.email, u.name, u.grade, c.comment, c.parent_comment, c.comment_date, u.profile_img, c.remove FROM comment_data c, user_data u
		<where>
			board_idx = #{idx}
			AND
			c.email = u.email
		</where>
	</select>
	
	<update id="updateComment">
		UPDATE comment_data SET comment = #{comment}
		<where>
			idx = #{idx}
			AND
			email = #{email}
		</where>
	</update>
	
	<update id="deleteComment">
		UPDATE comment_data SET remove = true
		<where>
			idx = #{idx}
			AND
			email = #{email}
		</where>
	</update>

</mapper>